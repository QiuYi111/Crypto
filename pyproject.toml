[project]
name = "cryptorl-agent"
version = "0.1.0"
description = "Cryptocurrency day trading reinforcement learning agent with LLM-enhanced sentiment analysis"
authors = [
    {name = "CryptoRL Team", email = "team@cryptorl.ai"}
]
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "loguru>=0.7.0",
    "python-dotenv>=1.0.0",
    # Database
    "influxdb-client>=1.36.0",
    "psycopg2-binary>=2.9.7",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    # API & HTTP
    "aiohttp>=3.8.0",
    "requests>=2.31.0",
    "httpx>=0.24.0",
    # Binance API
    "python-binance>=1.0.19",
    # Machine Learning & RL
    "torch>=2.0.0",
    "gymnasium>=0.29.0",
    "stable-baselines3>=2.0.0",
    "numpy-quaternion>=2022.4.3",
    # LLM & Transformers
    "transformers>=4.35.0",
    "datasets>=2.14.0",
    "accelerate>=0.24.0",
    "peft>=0.6.0",
    "bitsandbytes>=0.41.0",
    # Search APIs
    "google-search-results>=2.4.2",
    # Monitoring & Visualization
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    # Development
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "ipython>=8.15.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "notebook-shim>=0.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/cryptorl"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cryptorl"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]